{
  "Settings": "更改配置",
  "Add a new startingDom": "增加startingDom",
  "Add a new endingDom": "增加endingDom",
  "Move": "移动",
  "startingDom has been added": "已新增startingDom",
  "endingDom has been added": "已新增endingDom",
  "subscription (pubsub subscription name, type: string)": "subscription（pubsub订阅名称，类型：string）",
  "muiltipleProjectile (whether multiple throwable objects are allowed to appear, type: boolean)": "muiltipleProjectile（是否允许出现多个抛掷物，类型：boolean）",
  "projectile (projectile, if you want to add className, you need to write the style globally, support jsx writing, type: ReactNode)": "projectile（抛掷物，如果要添加className需把样式写在全局，支持jsx写法，类型：ReactNode）",
  "duration (the duration of the throwing animation, unit: seconds, type: number)": "duration（抛掷动画持续的时间，单位：秒，类型：number）",
  "zIndex (set the zIndex of the projectile, type: number)": "zIndex（设置抛掷物的zIndex，类型：number）",
  "needEndingDomAnimation (whether endingDom needs to animate after being hit by a projectile, type: boolean)": "needEndingDomAnimation（endingDom是否需要被抛掷物击中后动画，类型：boolean）",
  "projectileMovmentEnd (projectile motion animation end callback, type: function) For example: () => { console.log(1) }": "projectileMovmentEnd（抛物运动动画结束回调，类型：function） 例如: () => { console.log(1) }",
  "endingDomAnimationEnd (endingDom animation end callback, type: function) For example: () => { console.log(1) }": "endingDomAnimationEnd（endingDom动画结束回调，类型：function）例如: () => { console.log(1) }",
  "endingDomAnimationDuration (endingDom animation duration after being hit by a projectile, unit: seconds, type: number)": "endingDomAnimationDuration（endingDom被抛掷物击中后动画持续时间，单位：秒，类型：number）",
  "additionalTransformValueInAnimate (supplementary animation transform value. After passing in this value, a new class name will be generated. This class will integrate all frames except the last frame of the keyframe corresponding to endingDomAnimationName to form a new class, which can then be used by endingDom. It can be set rotate scale translate skew and other values, if you set multiple values, please separate them with spaces)": "additionalTransformValueInAnimate（补充的动画的transform值，传入该值后会生成新的类名，该类会整合endingDomAnimationName对应的keyframe除最后一帧外的其他帧，形成新的类，然后供endingDom应用。可以设置rotate scale translate skew 等值，若设置多个请用空格隔开）",
  "endingDomAnimationName (the name of the animation after endingDom is hit by a projectile. The animation needs to be defined globally, type: string. This Demo has built-in animate.css. If the project needs to use it, please install it first and perform npm install animate.css --save and then import it globally. import 'animate.css', or introduce the required styles as needed, please refer to": "endingDomAnimationName（endingDom被抛掷物击中后的animation的名称，animation需定义在全局，类型：string， 本Demo内置animate.css,若项目需使用请先安装进行npm install animate.css --save 然后全局导入import 'animate.css', 或按需引入需要的样式  详情请参考",
  "wrapClassName (class name of the outer container of the projectile, type: string)": "wrapClassName（抛掷物外层容器的类名，类型：string）",
  "isInitialYAxisReverse (whether the initial velocity of the parabolic motion is in the opposite direction of the y-axis, type: boolean)": "isInitialYAxisReverse（抛物运动初速度y轴方向是否为反方向，类型：boolean）",
  "projectileTransition (if the transition attribute of a custom projectile is passed in, duration and isInitialYAxisReverse will be invalid, type: string)": "projectileTransition（自定义抛掷物的transition属性若传入此属性则duration和isInitialYAxisReverse将失效，类型：string）",
  "Graphical details": "图示详情",
  "Cancel": "取消",
  "Save": "保存",
  "Example of pass parameter": "传参示例",
  "Pass parameter": "传参",
  "Not a legal function": "不是合法的函数",
  "Not a legal dom": "不是合法的dom",
  "startingDom.current is the starting position of the projectile motion specified by the user": "startingDom.current 为用户指定的抛物运动开始的位置",
  "endingDom.current is the end position of the parabolic motion specified by the user": "endingDom.current为用户指定的抛物运动结束的位置",
  "Image loading failed, please refresh the page": "图片加载失败，请刷新页面",
  "additionalTransformValueInAnimate_en.png":"additionalTransformValueInAnimate_zh.png"
}